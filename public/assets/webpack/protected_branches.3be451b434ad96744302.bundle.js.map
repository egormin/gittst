{"version":3,"sources":["webpack:///protected_branches.3be451b434ad96744302.bundle.js","webpack:///./protected_branches/protected_branch_access_dropdown.js","webpack:///./protected_branches/protected_branch_create.js","webpack:///./protected_branches/protected_branch_dropdown.js","webpack:///./protected_branches/protected_branch_edit.js","webpack:///./protected_branches/protected_branch_edit_list.js"],"names":["webpackJsonp","./protected_branches/protected_branch_access_dropdown.js","module","exports","_classCallCheck","instance","Constructor","TypeError","global","gl","ProtectedBranchAccessDropdown","_class","options","this","$dropdown","data","onSelect","glDropdown","selectable","inputId","fieldName","toggleLabel","item","el","is","text","clicked","opts","e","preventDefault","window","./protected_branches/protected_branch_create.js","__webpack_require__","$","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","ProtectedBranchCreate","$wrap","$form","buildDropdowns","value","$allowedToMergeDropdown","find","$allowedToPushDropdown","onSelectCallback","bind","gon","merge_access_levels","push_access_levels","selectRowAtIndex","ProtectedBranchDropdown","$branchInput","$allowedToMergeInput","$allowedToPushInput","attr","val","call","./protected_branches/protected_branch_dropdown.js","$dropdownContainer","parent","$dropdownFooter","$protectedBranch","buildDropdown","bindEvents","addClass","_this","getProtectedBranches","filterable","remote","search","fields","selected","title","protectedBranch","_","escape","id","onFilter","toggleCreateNewButton","$el","on","onClickCreateWildcard","execute","term","callback","selectedBranch","open_branches","concat","branchName","toggleClass","./protected_branches/protected_branch_edit.js","ProtectedBranchEdit","disable","ajax","type","url","dataType","_method","protected_branch","merge_access_levels_attributes","access_level","push_access_levels_attributes","error","scrollTo","Flash","always","enable","./protected_branches/protected_branch_edit_list.js","ProtectedBranchEditList","each","./protected_branches/protected_branches_bundle.js","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0__protected_branch_access_dropdown__","__WEBPACK_IMPORTED_MODULE_1__protected_branch_create__","n","__WEBPACK_IMPORTED_MODULE_2__protected_branch_dropdown__","__WEBPACK_IMPORTED_MODULE_3__protected_branch_edit__","__WEBPACK_IMPORTED_MODULE_4__protected_branch_edit_list__"],"mappings":"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","file":"protected_branches.3be451b434ad96744302.bundle.js","sourcesContent":["webpackJsonp([\"protected_branches\"],{\n\n/***/ \"./protected_branches/protected_branch_access_dropdown.js\":\n/***/ (function(module, exports) {\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* eslint-disable arrow-parens, no-param-reassign, object-shorthand, no-else-return, comma-dangle, max-len */\n\n(function (global) {\n  global.gl = global.gl || {};\n\n  gl.ProtectedBranchAccessDropdown = function () {\n    function _class(options) {\n      _classCallCheck(this, _class);\n\n      var $dropdown = options.$dropdown,\n          data = options.data,\n          onSelect = options.onSelect;\n\n\n      $dropdown.glDropdown({\n        data: data,\n        selectable: true,\n        inputId: $dropdown.data('input-id'),\n        fieldName: $dropdown.data('field-name'),\n        toggleLabel: function toggleLabel(item, el) {\n          if (el.is('.is-active')) {\n            return item.text;\n          } else {\n            return 'Select';\n          }\n        },\n        clicked: function clicked(opts) {\n          var e = opts.e;\n\n\n          e.preventDefault();\n          onSelect();\n        }\n      });\n    }\n\n    return _class;\n  }();\n})(window);\n\n/***/ }),\n\n/***/ \"./protected_branches/protected_branch_create.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* eslint-disable no-new, arrow-parens, no-param-reassign, comma-dangle, max-len */\n/* global ProtectedBranchDropdown */\n\n(function (global) {\n  global.gl = global.gl || {};\n\n  gl.ProtectedBranchCreate = function () {\n    function _class() {\n      _classCallCheck(this, _class);\n\n      this.$wrap = this.$form = $('#new_protected_branch');\n      this.buildDropdowns();\n    }\n\n    _createClass(_class, [{\n      key: 'buildDropdowns',\n      value: function buildDropdowns() {\n        var $allowedToMergeDropdown = this.$wrap.find('.js-allowed-to-merge');\n        var $allowedToPushDropdown = this.$wrap.find('.js-allowed-to-push');\n\n        // Cache callback\n        this.onSelectCallback = this.onSelect.bind(this);\n\n        // Allowed to Merge dropdown\n        new gl.ProtectedBranchAccessDropdown({\n          $dropdown: $allowedToMergeDropdown,\n          data: gon.merge_access_levels,\n          onSelect: this.onSelectCallback\n        });\n\n        // Allowed to Push dropdown\n        new gl.ProtectedBranchAccessDropdown({\n          $dropdown: $allowedToPushDropdown,\n          data: gon.push_access_levels,\n          onSelect: this.onSelectCallback\n        });\n\n        // Select default\n        $allowedToPushDropdown.data('glDropdown').selectRowAtIndex(0);\n        $allowedToMergeDropdown.data('glDropdown').selectRowAtIndex(0);\n\n        // Protected branch dropdown\n        new ProtectedBranchDropdown({\n          $dropdown: this.$wrap.find('.js-protected-branch-select'),\n          onSelect: this.onSelectCallback\n        });\n      }\n\n      // This will run after clicked callback\n\n    }, {\n      key: 'onSelect',\n      value: function onSelect() {\n        // Enable submit button\n        var $branchInput = this.$wrap.find('input[name=\"protected_branch[name]\"]');\n        var $allowedToMergeInput = this.$wrap.find('input[name=\"protected_branch[merge_access_levels_attributes][0][access_level]\"]');\n        var $allowedToPushInput = this.$wrap.find('input[name=\"protected_branch[push_access_levels_attributes][0][access_level]\"]');\n\n        this.$form.find('input[type=\"submit\"]').attr('disabled', !($branchInput.val() && $allowedToMergeInput.length && $allowedToPushInput.length));\n      }\n    }]);\n\n    return _class;\n  }();\n})(window);\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"../../../node_modules/jquery/dist/jquery.js\")))\n\n/***/ }),\n\n/***/ \"./protected_branches/protected_branch_dropdown.js\":\n/***/ (function(module, exports) {\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* eslint-disable comma-dangle, no-unused-vars */\n\nvar ProtectedBranchDropdown = function () {\n  function ProtectedBranchDropdown(options) {\n    _classCallCheck(this, ProtectedBranchDropdown);\n\n    this.onSelect = options.onSelect;\n    this.$dropdown = options.$dropdown;\n    this.$dropdownContainer = this.$dropdown.parent();\n    this.$dropdownFooter = this.$dropdownContainer.find('.dropdown-footer');\n    this.$protectedBranch = this.$dropdownContainer.find('.js-create-new-protected-branch');\n\n    this.buildDropdown();\n    this.bindEvents();\n\n    // Hide footer\n    this.$dropdownFooter.addClass('hidden');\n  }\n\n  _createClass(ProtectedBranchDropdown, [{\n    key: 'buildDropdown',\n    value: function buildDropdown() {\n      var _this = this;\n\n      this.$dropdown.glDropdown({\n        data: this.getProtectedBranches.bind(this),\n        filterable: true,\n        remote: false,\n        search: {\n          fields: ['title']\n        },\n        selectable: true,\n        toggleLabel: function toggleLabel(selected) {\n          return selected && 'id' in selected ? selected.title : 'Protected Branch';\n        },\n\n        fieldName: 'protected_branch[name]',\n        text: function text(protectedBranch) {\n          return _.escape(protectedBranch.title);\n        },\n        id: function id(protectedBranch) {\n          return _.escape(protectedBranch.id);\n        },\n\n        onFilter: this.toggleCreateNewButton.bind(this),\n        clicked: function clicked(options) {\n          var $el = options.$el,\n              e = options.e;\n\n          e.preventDefault();\n          _this.onSelect();\n        }\n      });\n    }\n  }, {\n    key: 'bindEvents',\n    value: function bindEvents() {\n      this.$protectedBranch.on('click', this.onClickCreateWildcard.bind(this));\n    }\n  }, {\n    key: 'onClickCreateWildcard',\n    value: function onClickCreateWildcard(e) {\n      e.preventDefault();\n\n      // Refresh the dropdown's data, which ends up calling `getProtectedBranches`\n      this.$dropdown.data('glDropdown').remote.execute();\n      this.$dropdown.data('glDropdown').selectRowAtIndex();\n    }\n  }, {\n    key: 'getProtectedBranches',\n    value: function getProtectedBranches(term, callback) {\n      if (this.selectedBranch) {\n        callback(gon.open_branches.concat(this.selectedBranch));\n      } else {\n        callback(gon.open_branches);\n      }\n    }\n  }, {\n    key: 'toggleCreateNewButton',\n    value: function toggleCreateNewButton(branchName) {\n      this.selectedBranch = {\n        title: branchName,\n        id: branchName,\n        text: branchName\n      };\n\n      if (branchName) {\n        this.$dropdownContainer.find('.js-create-new-protected-branch code').text(branchName);\n      }\n\n      this.$dropdownFooter.toggleClass('hidden', !branchName);\n    }\n  }]);\n\n  return ProtectedBranchDropdown;\n}();\n\nwindow.ProtectedBranchDropdown = ProtectedBranchDropdown;\n\n/***/ }),\n\n/***/ \"./protected_branches/protected_branch_edit.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* eslint-disable no-new, arrow-parens, no-param-reassign, comma-dangle, max-len */\n/* global Flash */\n\n(function (global) {\n  global.gl = global.gl || {};\n\n  gl.ProtectedBranchEdit = function () {\n    function _class(options) {\n      _classCallCheck(this, _class);\n\n      this.$wrap = options.$wrap;\n      this.$allowedToMergeDropdown = this.$wrap.find('.js-allowed-to-merge');\n      this.$allowedToPushDropdown = this.$wrap.find('.js-allowed-to-push');\n\n      this.buildDropdowns();\n    }\n\n    _createClass(_class, [{\n      key: 'buildDropdowns',\n      value: function buildDropdowns() {\n        // Allowed to merge dropdown\n        new gl.ProtectedBranchAccessDropdown({\n          $dropdown: this.$allowedToMergeDropdown,\n          data: gon.merge_access_levels,\n          onSelect: this.onSelect.bind(this)\n        });\n\n        // Allowed to push dropdown\n        new gl.ProtectedBranchAccessDropdown({\n          $dropdown: this.$allowedToPushDropdown,\n          data: gon.push_access_levels,\n          onSelect: this.onSelect.bind(this)\n        });\n      }\n    }, {\n      key: 'onSelect',\n      value: function onSelect() {\n        var _this = this;\n\n        var $allowedToMergeInput = this.$wrap.find('input[name=\"' + this.$allowedToMergeDropdown.data('fieldName') + '\"]');\n        var $allowedToPushInput = this.$wrap.find('input[name=\"' + this.$allowedToPushDropdown.data('fieldName') + '\"]');\n\n        // Do not update if one dropdown has not selected any option\n        if (!($allowedToMergeInput.length && $allowedToPushInput.length)) return;\n\n        this.$allowedToMergeDropdown.disable();\n        this.$allowedToPushDropdown.disable();\n\n        $.ajax({\n          type: 'POST',\n          url: this.$wrap.data('url'),\n          dataType: 'json',\n          data: {\n            _method: 'PATCH',\n            protected_branch: {\n              merge_access_levels_attributes: [{\n                id: this.$allowedToMergeDropdown.data('access-level-id'),\n                access_level: $allowedToMergeInput.val()\n              }],\n              push_access_levels_attributes: [{\n                id: this.$allowedToPushDropdown.data('access-level-id'),\n                access_level: $allowedToPushInput.val()\n              }]\n            }\n          },\n          error: function error() {\n            $.scrollTo(0);\n            new Flash('Failed to update branch!');\n          }\n        }).always(function () {\n          _this.$allowedToMergeDropdown.enable();\n          _this.$allowedToPushDropdown.enable();\n        });\n      }\n    }]);\n\n    return _class;\n  }();\n})(window);\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"../../../node_modules/jquery/dist/jquery.js\")))\n\n/***/ }),\n\n/***/ \"./protected_branches/protected_branch_edit_list.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* eslint-disable arrow-parens, no-param-reassign, no-new, comma-dangle */\n\n(function (global) {\n  global.gl = global.gl || {};\n\n  gl.ProtectedBranchEditList = function () {\n    function _class() {\n      _classCallCheck(this, _class);\n\n      this.$wrap = $('.protected-branches-list');\n\n      // Build edit forms\n      this.$wrap.find('.js-protected-branch-edit-form').each(function (i, el) {\n        new gl.ProtectedBranchEdit({\n          $wrap: $(el)\n        });\n      });\n    }\n\n    return _class;\n  }();\n})(window);\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"../../../node_modules/jquery/dist/jquery.js\")))\n\n/***/ }),\n\n/***/ \"./protected_branches/protected_branches_bundle.js\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__protected_branch_access_dropdown__ = __webpack_require__(\"./protected_branches/protected_branch_access_dropdown.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__protected_branch_access_dropdown___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__protected_branch_access_dropdown__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__protected_branch_create__ = __webpack_require__(\"./protected_branches/protected_branch_create.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__protected_branch_create___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__protected_branch_create__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__protected_branch_dropdown__ = __webpack_require__(\"./protected_branches/protected_branch_dropdown.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__protected_branch_dropdown___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__protected_branch_dropdown__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__protected_branch_edit__ = __webpack_require__(\"./protected_branches/protected_branch_edit.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__protected_branch_edit___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__protected_branch_edit__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__protected_branch_edit_list__ = __webpack_require__(\"./protected_branches/protected_branch_edit_list.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__protected_branch_edit_list___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__protected_branch_edit_list__);\n\n\n\n\n\n\n/***/ })\n\n},[\"./protected_branches/protected_branches_bundle.js\"]);\n\n\n// WEBPACK FOOTER //\n// protected_branches.3be451b434ad96744302.bundle.js","/* eslint-disable arrow-parens, no-param-reassign, object-shorthand, no-else-return, comma-dangle, max-len */\n\n(global => {\n  global.gl = global.gl || {};\n\n  gl.ProtectedBranchAccessDropdown = class {\n    constructor(options) {\n      const { $dropdown, data, onSelect } = options;\n\n      $dropdown.glDropdown({\n        data: data,\n        selectable: true,\n        inputId: $dropdown.data('input-id'),\n        fieldName: $dropdown.data('field-name'),\n        toggleLabel(item, el) {\n          if (el.is('.is-active')) {\n            return item.text;\n          } else {\n            return 'Select';\n          }\n        },\n        clicked(opts) {\n          const { e } = opts;\n\n          e.preventDefault();\n          onSelect();\n        }\n      });\n    }\n  };\n})(window);\n\n\n\n// WEBPACK FOOTER //\n// ./protected_branches/protected_branch_access_dropdown.js","/* eslint-disable no-new, arrow-parens, no-param-reassign, comma-dangle, max-len */\n/* global ProtectedBranchDropdown */\n\n(global => {\n  global.gl = global.gl || {};\n\n  gl.ProtectedBranchCreate = class {\n    constructor() {\n      this.$wrap = this.$form = $('#new_protected_branch');\n      this.buildDropdowns();\n    }\n\n    buildDropdowns() {\n      const $allowedToMergeDropdown = this.$wrap.find('.js-allowed-to-merge');\n      const $allowedToPushDropdown = this.$wrap.find('.js-allowed-to-push');\n\n      // Cache callback\n      this.onSelectCallback = this.onSelect.bind(this);\n\n      // Allowed to Merge dropdown\n      new gl.ProtectedBranchAccessDropdown({\n        $dropdown: $allowedToMergeDropdown,\n        data: gon.merge_access_levels,\n        onSelect: this.onSelectCallback\n      });\n\n      // Allowed to Push dropdown\n      new gl.ProtectedBranchAccessDropdown({\n        $dropdown: $allowedToPushDropdown,\n        data: gon.push_access_levels,\n        onSelect: this.onSelectCallback\n      });\n\n      // Select default\n      $allowedToPushDropdown.data('glDropdown').selectRowAtIndex(0);\n      $allowedToMergeDropdown.data('glDropdown').selectRowAtIndex(0);\n\n      // Protected branch dropdown\n      new ProtectedBranchDropdown({\n        $dropdown: this.$wrap.find('.js-protected-branch-select'),\n        onSelect: this.onSelectCallback\n      });\n    }\n\n    // This will run after clicked callback\n    onSelect() {\n      // Enable submit button\n      const $branchInput = this.$wrap.find('input[name=\"protected_branch[name]\"]');\n      const $allowedToMergeInput = this.$wrap.find('input[name=\"protected_branch[merge_access_levels_attributes][0][access_level]\"]');\n      const $allowedToPushInput = this.$wrap.find('input[name=\"protected_branch[push_access_levels_attributes][0][access_level]\"]');\n\n      this.$form.find('input[type=\"submit\"]').attr('disabled', !($branchInput.val() && $allowedToMergeInput.length && $allowedToPushInput.length));\n    }\n  };\n})(window);\n\n\n\n// WEBPACK FOOTER //\n// ./protected_branches/protected_branch_create.js","/* eslint-disable comma-dangle, no-unused-vars */\n\nclass ProtectedBranchDropdown {\n  constructor(options) {\n    this.onSelect = options.onSelect;\n    this.$dropdown = options.$dropdown;\n    this.$dropdownContainer = this.$dropdown.parent();\n    this.$dropdownFooter = this.$dropdownContainer.find('.dropdown-footer');\n    this.$protectedBranch = this.$dropdownContainer.find('.js-create-new-protected-branch');\n\n    this.buildDropdown();\n    this.bindEvents();\n\n    // Hide footer\n    this.$dropdownFooter.addClass('hidden');\n  }\n\n  buildDropdown() {\n    this.$dropdown.glDropdown({\n      data: this.getProtectedBranches.bind(this),\n      filterable: true,\n      remote: false,\n      search: {\n        fields: ['title']\n      },\n      selectable: true,\n      toggleLabel(selected) {\n        return (selected && 'id' in selected) ? selected.title : 'Protected Branch';\n      },\n      fieldName: 'protected_branch[name]',\n      text(protectedBranch) {\n        return _.escape(protectedBranch.title);\n      },\n      id(protectedBranch) {\n        return _.escape(protectedBranch.id);\n      },\n      onFilter: this.toggleCreateNewButton.bind(this),\n      clicked: (options) => {\n        const { $el, e } = options;\n        e.preventDefault();\n        this.onSelect();\n      }\n    });\n  }\n\n  bindEvents() {\n    this.$protectedBranch.on('click', this.onClickCreateWildcard.bind(this));\n  }\n\n  onClickCreateWildcard(e) {\n    e.preventDefault();\n\n    // Refresh the dropdown's data, which ends up calling `getProtectedBranches`\n    this.$dropdown.data('glDropdown').remote.execute();\n    this.$dropdown.data('glDropdown').selectRowAtIndex();\n  }\n\n  getProtectedBranches(term, callback) {\n    if (this.selectedBranch) {\n      callback(gon.open_branches.concat(this.selectedBranch));\n    } else {\n      callback(gon.open_branches);\n    }\n  }\n\n  toggleCreateNewButton(branchName) {\n    this.selectedBranch = {\n      title: branchName,\n      id: branchName,\n      text: branchName\n    };\n\n    if (branchName) {\n      this.$dropdownContainer\n        .find('.js-create-new-protected-branch code')\n        .text(branchName);\n    }\n\n    this.$dropdownFooter.toggleClass('hidden', !branchName);\n  }\n}\n\nwindow.ProtectedBranchDropdown = ProtectedBranchDropdown;\n\n\n\n// WEBPACK FOOTER //\n// ./protected_branches/protected_branch_dropdown.js","/* eslint-disable no-new, arrow-parens, no-param-reassign, comma-dangle, max-len */\n/* global Flash */\n\n(global => {\n  global.gl = global.gl || {};\n\n  gl.ProtectedBranchEdit = class {\n    constructor(options) {\n      this.$wrap = options.$wrap;\n      this.$allowedToMergeDropdown = this.$wrap.find('.js-allowed-to-merge');\n      this.$allowedToPushDropdown = this.$wrap.find('.js-allowed-to-push');\n\n      this.buildDropdowns();\n    }\n\n    buildDropdowns() {\n      // Allowed to merge dropdown\n      new gl.ProtectedBranchAccessDropdown({\n        $dropdown: this.$allowedToMergeDropdown,\n        data: gon.merge_access_levels,\n        onSelect: this.onSelect.bind(this)\n      });\n\n      // Allowed to push dropdown\n      new gl.ProtectedBranchAccessDropdown({\n        $dropdown: this.$allowedToPushDropdown,\n        data: gon.push_access_levels,\n        onSelect: this.onSelect.bind(this)\n      });\n    }\n\n    onSelect() {\n      const $allowedToMergeInput = this.$wrap.find(`input[name=\"${this.$allowedToMergeDropdown.data('fieldName')}\"]`);\n      const $allowedToPushInput = this.$wrap.find(`input[name=\"${this.$allowedToPushDropdown.data('fieldName')}\"]`);\n\n      // Do not update if one dropdown has not selected any option\n      if (!($allowedToMergeInput.length && $allowedToPushInput.length)) return;\n\n      this.$allowedToMergeDropdown.disable();\n      this.$allowedToPushDropdown.disable();\n\n      $.ajax({\n        type: 'POST',\n        url: this.$wrap.data('url'),\n        dataType: 'json',\n        data: {\n          _method: 'PATCH',\n          protected_branch: {\n            merge_access_levels_attributes: [{\n              id: this.$allowedToMergeDropdown.data('access-level-id'),\n              access_level: $allowedToMergeInput.val()\n            }],\n            push_access_levels_attributes: [{\n              id: this.$allowedToPushDropdown.data('access-level-id'),\n              access_level: $allowedToPushInput.val()\n            }]\n          }\n        },\n        error() {\n          $.scrollTo(0);\n          new Flash('Failed to update branch!');\n        }\n      }).always(() => {\n        this.$allowedToMergeDropdown.enable();\n        this.$allowedToPushDropdown.enable();\n      });\n    }\n  };\n})(window);\n\n\n\n// WEBPACK FOOTER //\n// ./protected_branches/protected_branch_edit.js","/* eslint-disable arrow-parens, no-param-reassign, no-new, comma-dangle */\n\n(global => {\n  global.gl = global.gl || {};\n\n  gl.ProtectedBranchEditList = class {\n    constructor() {\n      this.$wrap = $('.protected-branches-list');\n\n      // Build edit forms\n      this.$wrap.find('.js-protected-branch-edit-form').each((i, el) => {\n        new gl.ProtectedBranchEdit({\n          $wrap: $(el)\n        });\n      });\n    }\n  };\n})(window);\n\n\n\n// WEBPACK FOOTER //\n// ./protected_branches/protected_branch_edit_list.js"],"sourceRoot":""}